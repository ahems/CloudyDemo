{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "newStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "The name of the new storage account created to store the VMs disks"
      },
      "defaultValue": "[substring(concat('securitytier',uniqueString(resourceGroup().id)),0,24)]"
    },
    "storageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Standard_ZRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "The type of the Storage Account created"
      },
      "defaultValue": "Premium_LRS"
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "The name of the existing Virtual Network to Use"
      },
      "defaultValue": "[uniqueString(resourceGroup().id)]"
    },
    "adSubnetName": {
      "type": "string",
      "metadata": {
        "description": "The name of the subnet in the existing VNET"
      },
      "defaultValue": "SecurityTierSubnet"
    },
    "adPDCNicName": {
      "type": "string",
      "metadata": {
        "description": "The name of the NIC attached to the new PDC"
      },
      "defaultValue": "[concat('securitytier-pdc-nic-', uniqueString(resourceGroup().id))]"
    },
    "adPDCNicIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The IP address of the new AD PDC"
      },
      "defaultValue": "10.0.3.4"
    },
    "adBDCNicName": {
      "type": "string",
      "metadata": {
        "description": "The name of the NIC attached to the new BDC"
      },
      "defaultValue": "[concat('securitytier-bdc-nic-', uniqueString(resourceGroup().id))]"
    },
    "adBDCNicIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The IP address of the new AD BDC"
      },
      "defaultValue": "10.0.3.5"
    },
    "publicIPAddressName": {
      "type": "string",
      "metadata": {
        "description": "The name of the public IP address used by the Load Balancer"
      },
      "defaultValue": "[concat('securitytier-ad-ilb-pip-', uniqueString(resourceGroup().id))]"
    },
    "publicIPAddressType": {
      "type": "string",
      "allowedValues": [
        "Dynamic",
        "Static"
      ],
      "metadata": {
        "description": "The type of the public IP address used by the Load Balancer"
      },
      "defaultValue": "Dynamic"
    },
    "adPDCVMName": {
      "type": "string",
      "metadata": {
        "description": "The computer name of the PDC"
      },
      "defaultValue": "[concat(substring(uniqueString(resourceGroup().id),0,11),'-PDC')]"
    },
    "adBDCVMName": {
      "type": "string",
      "metadata": {
        "description": "The computer name of the BDC"
      },
      "defaultValue": "[concat(substring(uniqueString(resourceGroup().id),0,11),'-BDC')]"
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the Administrator of the new VM and Domain"
      },
      "defaultValue": "LordAndMaster"
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the Administrator account of the new VM and Domain"
      }
    },
    "adVMSize": {
      "type": "string",
      "allowedValues": [
        "Standard_F1",
        "Standard_F1s",
        "Standard_F2",
        "Standard_F2s",
        "Standard_F4",
        "Standard_F4s"
      ],
      "metadata": {
        "description": "The size of the VM's Created"
      },
      "defaultValue": "Standard_F2s"
    },
    "imagePublisher": {
      "type": "string",
      "defaultValue": "MicrosoftWindowsServer",
      "metadata": {
        "description": "Image Publisher"
      }
    },
    "imageOffer": {
      "type": "string",
      "defaultValue": "WindowsServer",
      "metadata": {
        "description": "Image Offer"
      }
    },
    "imageSKU": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "metadata": {
        "description": "Image SKU"
      }
    },
    "adAvailabilitySetName": {
      "type": "string",
      "metadata": {
        "description": "The name of the availability set that the AD VM is created in"
      },
      "defaultValue": "[concat('securitytier-ad-as-', uniqueString(resourceGroup().id))]"
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "The FQDN of the AD Domain created"
      },
      "defaultValue": "[concat('a',uniqueString(resourceGroup().id),'.cloudydemos.com')]"    
    },
    "dnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "The DNS prefix for the public IP address used by the Load Balancer"
      },
      "defaultValue": "[concat('a',uniqueString(resourceGroup().id))]"
    },
    "pdcRDPPort": {
      "type": "int",
      "metadata": {
        "description": "The public RDP port for the PDC VM"
      },
      "defaultValue": 3389
    },
    "bdcRDPPort": {
      "type": "int",
      "metadata": {
        "description": "The public RDP port for the BDC VM"
      },
      "defaultValue": 13389
    },
    "assetLocation": {
      "type": "string",
      "metadata": {
        "description": "The location of resources such as templates and DSC modules upon which this script is dependent"
      },
      "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/active-directory-new-domain-ha-2-dc/"
    },
     "DeploymentVersion" : {
        "type": "string",
        "defaultValue": "None Specified",
        "metadata": {
            "description" : "What value shall we tag these resources with to indicate what version this is?"
        }
    }
  },
  "variables": {
    "adLBFE": "LBFE",
    "adLBBE": "LBBE",
    "adPDCRDPNAT": "adPDCRDP",
    "adBDCRDPNAT": "adBDCRDP",
    "VnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "adSubnetRef": "[concat(variables('VnetID'),'/subnets/',parameters('adSubnetName'))]",
    "adLBName": "[concat('securitytier-ad-ilb-', uniqueString(resourceGroup().id))]",
    "adlbID": "[resourceId('Microsoft.Network/loadBalancers',variables('adLBName'))]",
    "adlbFEConfigID": "[concat(variables('adlbID'),'/frontendIPConfigurations/',variables('adLBFE'))]",
    "adPDCRDPNATRuleID": "[concat(variables('adlbID'),'/inboundNatRules/',variables('adPDCRDPNAT'))]",
    "adBDCRDPNATRuleID": "[concat(variables('adlbID'),'/inboundNatRules/',variables('adBDCRDPNAT'))]",
    "adBEAddressPoolID": "[concat(variables('adlbID'),'/backendAddressPools/',variables('adLBBE'))]",
    "adPDCDataDisk": "ADPDCDataDisk",
    "adBDCDataDisk": "ADBDCDataDisk",
    "adDataDiskSize": 128,
    "nicTemplateUri": "[concat(parameters('assetLocation'),'nic.json')]",
    "adPDCModulesURL": "[concat(parameters('assetLocation'),'CreateADPDC.ps1.zip')]",
    "adPDCConfigurationFunction": "CreateADPDC.ps1\\CreateADPDC",
    "adBDCModulesURL": "[concat(parameters('assetLocation'),'CreateADBDC.ps1.zip')]",
    "adBDCConfigurationFunction": "CreateADBDC.ps1\\CreateADBDC"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('newStorageAccountName')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[parameters('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {         
        "publicIPAllocationMethod": "[parameters('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsPrefix')]"
        }
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[parameters('adAvailabilitySetName')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "properties": {
        "platformFaultDomainCount": 3,
        "platformUpdateDomainCount": 3
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "name": "[variables('adLBName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses',parameters('publicIPAddressName'))]"
      ],
       "tags": {
				"DeploymentVersion": "[parameters('DeploymentVersion')]",
                "UniqueId" : "[uniqueString(resourceGroup().id)]"
        },
      "properties": {          
        "frontendIPConfigurations": [
          {
            "name": "[variables('adLBFE')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('publicIPAddressName'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('adLBBE')]"
          }
        ],
        "inboundNatRules": [
          {
            "name": "[variables('adPDCRDPNAT')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('adlbFEConfigID')]"
              },
              "protocol": "tcp",
              "frontendPort": "[parameters('pdcRDPPort')]",
              "backendPort": 3389,
              "enableFloatingIP": false
            }
          },
          {
            "name": "[variables('adBDCRDPNAT')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('adlbFEConfigID')]"
              },
              "protocol": "tcp",
              "frontendPort": "[parameters('bdcRDPPort')]",
              "backendPort": 3389,
              "enableFloatingIP": false
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('adPDCNicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/',variables('adLBName'))]"
      ],
      "apiVersion": "2015-05-01-preview",
       "tags": {
				"DeploymentVersion": "[parameters('DeploymentVersion')]",
                "UniqueId" : "[uniqueString(resourceGroup().id)]"
        },
      "properties": {          
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('adPDCNicIPAddress')]",
              "subnet": {
                "id": "[variables('adSubnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[variables('adBEAddressPoolID')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[variables('adPDCRDPNATRuleID')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('adBDCNicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/',variables('adLBName'))]"
      ],
      "apiVersion": "2015-05-01-preview",
          "tags": {
				        "DeploymentVersion": "[parameters('DeploymentVersion')]",
                "UniqueId" : "[uniqueString(resourceGroup().id)]"
        },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('adBDCNicIPAddress')]",
              "subnet": {
                "id": "[variables('adSubnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[variables('adBEAddressPoolID')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[variables('adBDCRDPNATRuleID')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('adPDCVMName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts',parameters('newStorageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces',parameters('adPDCNicName'))]",
        "[resourceId('Microsoft.Compute/availabilitySets', parameters('adAvailabilitySetName'))]",
        "[resourceId('Microsoft.Network/loadBalancers',variables('adLBName'))]"
      ],
       "tags": {
				"DeploymentVersion": "[parameters('DeploymentVersion')]",
                "UniqueId" : "[uniqueString(resourceGroup().id)]"
        },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('adVMSize')]"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('adAvailabilitySetName'))]"
        },
        "osProfile": {
          "computerName": "[parameters('adPDCVMName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imagePublisher')]",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds0/','osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "vhd": {
                "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds0/', variables('adPDCDataDisk'),'-1.vhd')]"
              },
              "name": "[concat(parameters('adPDCVMName'),'-data-disk1')]",
              "caching": "None",
              "diskSizeGB": "[variables('adDataDiskSize')]",
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',parameters('adPDCNicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('adPDCVMName'),'/CreateADForest')]",
          "apiVersion": "2015-05-01-preview",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', parameters('adPDCVMName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.19",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "ModulesUrl": "[variables('adPDCModulesURL')]",
              "ConfigurationFunction": "[variables('adPDCConfigurationFunction')]",
              "Properties": {
                "DomainName": "[parameters('domainName')]",
                "AdminCreds": {
                  "UserName": "[parameters('adminUserName')]",
                  "Password": "PrivateSettingsRef:AdminPassword"
                }
              }
            },
            "protectedSettings": {
              "Items": {
                "AdminPassword": "[parameters('adminPassword')]"
              }
            }
          }
        }
      ]
    },
    {
      "name": "UpdateBDCNIC",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
       "[concat('Microsoft.Compute/virtualMachines/', parameters('adPDCVMName'),'/extensions/CreateADForest')]"
       ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('nicTemplateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "nicName": {
            "value": "[parameters('adBDCNicName')]"
          },
          "ipConfigurations": {
            "value": [
              {
                "name": "ipconfig1",
                "properties": {
                  "privateIPAllocationMethod": "Static",
                  "privateIPAddress": "[parameters('adBDCNicIPAddress')]",
                  "subnet": {
                    "id": "[variables('adSubnetRef')]"
                  },
                  "loadBalancerBackendAddressPools": [
                    {
                      "id": "[variables('adBEAddressPoolID')]"
                    }
                  ],
                  "loadBalancerInboundNatRules": [
                    {
                      "id": "[variables('adBDCRDPNATRuleID')]"
                    }
                  ]
                }
              }
            ]
          },
          "dnsServers": {
            "value": [
              "[parameters('adPDCNicIPAddress')]"
            ]
          }
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('adBDCVMName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts',parameters('newStorageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces',parameters('adBDCNicName'))]",
        "[resourceId('Microsoft.Compute/availabilitySets', parameters('adAvailabilitySetName'))]",
        "[resourceId('Microsoft.Network/loadBalancers',variables('adLBName'))]"
      ],
      "tags": {
				"DeploymentVersion": "[parameters('DeploymentVersion')]",
                "UniqueId" : "[uniqueString(resourceGroup().id)]"
        },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('adVMSize')]"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('adAvailabilitySetName'))]"
        },
        "osProfile": {
          "computerName": "[parameters('adBDCVMName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imagePublisher')]",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds1/','osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "vhd": {
                "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds1/', variables('adBDCDataDisk'),'-1.vhd')]"
              },
              "name": "[concat(parameters('adBDCVMName'),'-data-disk1')]",
              "caching": "None",
              "diskSizeGB": "[variables('adDataDiskSize')]",
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',parameters('adBDCNicName'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('adBDCVMName'),'/CreateBDC')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('adBDCVMName'))]",
        "Microsoft.Resources/deployments/UpdateBDCNIC"
      ],
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.19",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "ModulesUrl": "[variables('adBDCModulesURL')]",
          "ConfigurationFunction": "[variables('adBDCConfigurationFunction')]",
          "Properties": {
            "DomainName": "[parameters('domainName')]",
            "AdminCreds": {
              "UserName": "[parameters('adminUserName')]",
              "Password": "PrivateSettingsRef:AdminPassword"
            }
          }
        },
        "protectedSettings": {
          "Items": {
            "AdminPassword": "[parameters('adminPassword')]"
          }
        }
      }
    }
  ]
}