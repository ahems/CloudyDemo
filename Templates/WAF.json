{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {   
  "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Virtual Network to Use"
      },
      "defaultValue": "[uniqueString(resourceGroup().id)]"
    },
    "SubnetName": {
      "type": "string",
      "metadata": {
        "description": "The name of the subnet in the existing VNET"
      },
      "defaultValue": "FrontEndSubnet"
    },
        "DiagnosticsStorageAccountName" : {
          "type": "string",
          "metadata": {
            "description": "Existing Diagnostics Storage Account Name"
            },
            "defaultValue": "[concat(uniqueString(resourceGroup().id),'diags')]"
        },
        "DeploymentVersion" : {
        "type": "string",
        "defaultValue": "None Specified",
        "metadata": {
            "description" : "What value shall we tag these resources with to indicate what version this is?"
        }
      }
    },
  "variables": {
    "virtualNetworkID": "[concat(resourceGroup().id, '/providers/Microsoft.Network/virtualNetworks/',parameters('virtualNetworkName'))]",
    "appGwPublicIPAddressName": "[concat('webtier-gw-pip-', uniqueString(resourceGroup().id))]",
    "appGwName": "[concat('webtier-gw-', uniqueString(resourceGroup().id))]",
    "appGwPublicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('appGwPublicIPAddressName'))]",
    "appGwID": "[resourceId('Microsoft.Network/applicationGateways',variables('appGwName'))]",
    "appGwSubnetID": "[concat(variables('virtualNetworkID'),'/subnets/',parameters('SubnetName'))]",
    "appGwFrontendPort": 80,
    "appGwBackendPort": 80,
    "appGwBePoolName": "[uniqueString(resourceGroup().id)]",
    "networkApiVersion": "2016-03-30"
  },
  "resources": [
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('appGwPublicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "[variables('networkApiVersion')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Network/applicationGateways",
      "name": "[variables('appGwName')]",
      "location": "[resourceGroup().location]",
      "tags": {
				  "DeploymentVersion": "[parameters('DeploymentVersion')]",
           "UniqueId" : "[uniqueString(resourceGroup().id)]"
        },
      "apiVersion": "[variables('networkApiVersion')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('appGwPublicIPAddressName'))]"
      ],
      "resources": [
        {
          "apiVersion": "2015-07-01",
          "name": "[concat(variables('appGwName'), '-diagnostics')]",
          "type": "Microsoft.Network/applicationGateways/providers/diagnosticsettings",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Network/applicationGateways/', variables('appGwName'))]"
          ],
          "properties": {
            "status": "ON",
            "storageAccountName": "[parameters('DiagnosticsStorageAccountName')]"
          }
        }
      ],
      "properties": {
        "sku": {
          "name": "Standard_Small",
          "tier": "Standard",
          "capacity": "2"
        },
        "gatewayIPConfigurations": [
          {
            "name": "appGwIpConfig",
            "properties": {
              "subnet": {
                "id": "[variables('appGwSubnetID')]"
              }
            }
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "appGwFrontendIP",
            "properties": {
              "PublicIPAddress": {
                "id": "[variables('appGwPublicIPAddressID')]"
              }
            }
          }
        ],
        "frontendPorts": [
          {
            "name": "appGwFrontendPort",
            "properties": {
              "Port": "[variables('appGwFrontendPort')]"
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('appGwBePoolName')]"
          }
        ],
        "backendHttpSettingsCollection": [
          {
            "name": "appGwBackendHttpSettings",
            "properties": {
              "Port": "[variables('appGwBackendPort')]",
              "Protocol": "Http",
              "CookieBasedAffinity": "Disabled"
            }
          }
        ],
        "httpListeners": [
          {
            "name": "appGwHttpListener",
            "properties": {
              "FrontendIPConfiguration": {
                "Id": "[concat(variables('appGwID'), '/frontendIPConfigurations/appGwFrontendIP')]"
              },
              "FrontendPort": {
                "Id": "[concat(variables('appGwID'), '/frontendPorts/appGwFrontendPort')]"
              },
              "Protocol": "Http",
              "SslCertificate": null
            }
          }
        ],
        "requestRoutingRules": [
          {
            "Name": "routeHTTP",
            "properties": {
              "RuleType": "Basic",
              "httpListener": {
                "id": "[concat(variables('appGwID'), '/httpListeners/appGwHttpListener')]"
              },
              "backendAddressPool": {
                "id": "[concat(variables('appGwID'), '/backendAddressPools/', variables('appGwBePoolName'))]"
              },
              "backendHttpSettings": {
                "id": "[concat(variables('appGwID'), '/backendHttpSettingsCollection/appGwBackendHttpSettings')]"
              }
            }
          }
        ]
      }
    }
  ]
}
